{
Copyright (c) 1996-2006 Han The Thanh, <thanh@pdftex.org>

This file is part of pdfTeX.

pdfTeX is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

pdfTeX is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with pdfTeX; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

$Id $
}

{ luatex.defines: additions for luaTeX }

{ macros from luatex.h }
@define function pdfcharmarked();
@define function getlpcode();
@define function getrpcode();
@define function getefcode();
@define function getknbscode();
@define function getstbscode();
@define function getshbscode();
@define function getknbccode();
@define function getknaccode();
@define function texbopenin();
@define function vfbopenin ();
@define procedure pdfmarkchar();
@define procedure writepdf();
@define procedure pdfassert();

@define procedure luacall();
@define procedure closelua();

@define function  luacstringinput;
@define function  luacstringpenultimate;
@define function  luacstringdetokenized;
@define function  luacstringcattable;
@define function  luacstringdefaultcattable;
@define function  luacstringsimple;
@define procedure luacstringclose();
@define procedure luacstringstart();

{ for callbacks }

@define function  runcallback();
@define function  runandsavecallback();
@define function  runsavedcallback();
@define procedure destroysavedcallback();
@define function  callbackdefined();
@define function  callbackluaid();

@define procedure getsavedluaboolean();
@define procedure getsavedluanumber();
@define procedure getsavedluastring();
@define procedure getluaboolean();
@define procedure getluanumber();
@define procedure getluastring();

{ bits for extended char code access }

@define function getmathcode();
@define procedure setmathcode();
@define function getdelcodea();
@define function getdelcodeb();
@define procedure setdelcode();

@define procedure unsavemathcodes ();
@define procedure initializemathcodes;
@define procedure dumpmathcodes;
@define procedure undumpmathcodes;

@define function getlccode();
@define procedure setlccode();

@define function getuccode();
@define procedure setuccode();

@define function getsfcode();
@define procedure setsfcode();

@define function getcatcode();
@define procedure setcatcode();

@define function validcatcodetable ();
@define procedure clearcatcodestack ();
@define procedure copycatcodes ();
@define procedure initexcatcodes ();
@define procedure unsavecatcodes ();
@define procedure unsavetextcodes ();
@define procedure initializetextcodes;
@define procedure dumptextcodes;
@define procedure undumptextcodes;

@define procedure dumpluacregisters;
@define procedure undumpluacregisters;

@define function doaopenout();
@define function dobopenout();

@define procedure flushloggableinfo;

{ bits and pieces from aleph }

@define procedure btestin ;


@define function readtfmfile();
@define function nextvfbyte;
@define function readvffile();
@define function readocpfile();
@define function readdatafile();

@define var ocptables;

@define procedure allocateocptable ();
@define procedure dumpocptable ();
@define procedure undumpocptable ();
@define procedure runexternalocp ();

@define function loadpoolstrings();

{ 'texfont' library definitions }

@define var fonttables;
@define procedure dumpfont ();
@define procedure undumpfont ();
@define function isvalidfont();
@define function copyfont();
@define function scalefont();
@define procedure createnullfont;

@define function fontname();
@define procedure setfontname();
@define function fontarea();
@define function fontbc();
@define function fontec();

@define function texfontname();
@define function texfontarea();
@define procedure settexfontname();

@define function cmpfontarea();
@define function cmpfontname();

@define function fontglue();
@define procedure setfontglue();

@define function fontcheck0();
@define function fontcheck1();
@define function fontcheck2();
@define function fontcheck3();

@define function fontsize();
@define function fontused();
@define procedure setfontused();

@define function fontdsize();
@define function fontnaturaldir();

@define function fontbchar();
@define function fontfalsebchar();


@define function fontparams();
@define function fontparam();
@define procedure setfontparams();
@define procedure setfontparam();
@define function slant();
@define function quad();
@define function xheight();
@define function space();
@define function extraspace();
@define function spacestretch();
@define function spaceshrink();

@define function fontkerns();
@define function fontkern();
@define function fontkernsc();
@define procedure setfontkerns();
@define procedure setfontkern();
@define procedure adjustfontkern();

@define function fontitalics();
@define function fontitalic();
@define procedure setfontitalics();
@define procedure setfontitalic();

@define function fontextens();
@define function fontexten();
@define procedure setfontextens();
@define procedure setfontexten();


@define function fontwidths();
@define function fontwidth();
@define procedure setfontwidths();
@define procedure setfontwidth();

@define function fontheights();
@define function fontheight();
@define procedure setfontheights();
@define procedure setfontheight();

@define function fontdepths();
@define function fontdepth();
@define procedure setfontdepths();
@define procedure setfontdepth();

@define function fontligkerns();
@define function fontligkern();

@define function haslig();
@define function haskern();

@define type liginfo;

@define function getligature();
@define function isligature();
@define function ligtype();
@define function ligreplacement();

@define function exttop();
@define function extmid();
@define function extbot();
@define function extrep();


@define var spaceshrinkcode;
@define var spacestretchcode;
@define var spacecode;
@define var exttag;
@define var listtag;
@define var nonchar;
@define var nonaddress;

@define function hyphenchar();
@define function skewchar();
@define procedure sethyphenchar();
@define procedure setskewchar();
@define function charexists();

@define function charwidth();
@define function charheight();
@define function chardepth();
@define function charitalic();
@define function chartag();
@define procedure setchartag();
@define function charremainder();

@define function readfontinfo();

@define function testnoligatures();
@define function gettagcode();
@define procedure setnoligatures();
@define procedure settagcode();

@define function getkern();

@define function bcharlabel();

@define function charkern();

{ functions from mapfile.c }
@define function hasfmentry();
@define procedure checkextfm();
@define procedure pdfmapfile();
@define procedure pdfmapline();
@define procedure pdfinitmapfile();

@define procedure allocvffnts();
@define procedure writefontstuff;

{ functions from utils.c }
@define procedure escapehex();
@define procedure escapename();
@define procedure escapestring();
@define function extxnoverd();
@define procedure getcreationdate;
@define procedure getfiledump();
@define procedure getfilemoddate();
@define procedure getfilesize();
@define procedure getmatch();
@define procedure getmd5sum();
@define function getresnameprefix;
@define procedure initstarttime;
@define function isquotebad;
@define function makecstring();
@define procedure matchstrings();
@define procedure libpdffinish;
@define procedure makepdftexbanner;
@define procedure printcreationdate;
@define procedure printmoddate;
@define procedure printID();
@define procedure setjobid();
@define procedure unescapehex();
@define procedure writestreamlength();
@define procedure removepdffile;
@define procedure garbagewarning;
@define function newcolorstack();
@define function colorstackset();
@define function colorstackpush();
@define function colorstackpop();
@define function colorstackcurrent();
@define function colorstackused;
@define function colorstackskippagestart();
@define procedure checkpdfsave();
@define procedure checkpdfrestore();
@define procedure pdfshipoutbegin();
@define procedure pdfshipoutend();
@define procedure pdfsetmatrix();
@define procedure matrixtransformpoint();
@define procedure matrixtransformrect();
@define function matrixused;
@define procedure matrixrecalculate();
@define function getllx;
@define function getlly;
@define function geturx;
@define function getury;


{ functions from vfpacket.c }
@define function newvfpacket();
@define function packetbyte;
@define procedure startpacket();
@define procedure storepacket();

{ functions from writefont.c }
@define procedure dopdffont();

{ functions from writeimg.c }
@define function checkimageb();
@define function checkimagec();
@define function checkimagei();
@define function epdforigx();
@define function epdforigy();
@define function imageheight();
@define function imagepages();
@define function imagecolordepth();
@define function imagewidth();
@define function imagexres();
@define function imageyres();
@define function ispdfimage();
@define function readimage();
@define procedure deleteimage();
@define procedure updateimageprocset();
@define procedure writeimage();

{ functions from writet3.c }
@define function getpkcharwidth();

{ functions from writezip.c }
@define procedure writezip();

{ functions from avlstuff.c }
@define procedure avlputobj();
@define function avlfindobj();

{ functions from tounicode.c }
@define procedure deftounicode();

{ end of luatex.defines }
